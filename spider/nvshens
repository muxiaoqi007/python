"""
女神网图片下载
"""

import requests
from requests import RequestException
from bs4 import BeautifulSoup
import re
from multiprocessing import Pool

import os
import time

start = 24656
end = 25370

base_url = 'https://www.nvshens.com/g/'

header1 = {
    "Connection": "keep-alive",
    "Host": "www.nvshens.com",
    "Cookie": "Hm_lvt_f378865b660846b55ba91d29e1c4c04d=1553273290; Hm_lpvt_f378865b660846b55ba91d29e1c4c04d=1553273294",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.81 Safari/537.36",
}

header2 = {
    "Connection": "keep-alive",
    "Host": "img.onvshen.com:85",
    "Referer": 'https://www.nvshens.com/g/24656',
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.81 Safari/537.36",
}


def tes2_url(url):
    print('正在访问', url)
    try:
        res = requests.get(url, headers=header1, timeout=5)
        soup = BeautifulSoup(res.text, 'lxml')
        if soup.select('#htilte'):
            url_true = url
            return url_true
        else:
            print('no url', url)
            pass
    except:
        pass


def parse(url):
    res = requests.get(url, headers=header1)
    soup = BeautifulSoup(res.text, 'lxml')
    try:
        title = soup.select_one('#htilte').text
        c = soup.select_one('.albumInfo > span').text
        img_num = int(re.sub("\D", "", c))

        img_base = soup.select_one('#hgallery > img')['src'][:-5]
        print(img_num, img_base)
        return (title, img_num, img_base)
    except:
        return None


def download_img(title, img_base, i):
    print(img_base, str(i).zfill(3))
    img_url = img_base + str(i).zfill(3) + ".jpg"
    try:
        res = requests.get(img_url, headers=header2, timeout=10)
        if res.status_code == 200:
            save_img(res.content, title, i)
        else:
            pass
        return None
    except RequestException:
        print('error:', img_url)
        return None


def save_img(content, title, i):
    dir_name_or = str(title)[:100].strip()
    # dir_name = re.sub("[\s+\.\!\/]+", "", dir_name_or)
    dir_path = "C:/img/"
    try:
        os.mkdir(dir_path)
    except:
        pass

    file_path = '{}/{}.{}'.format(dir_path, title+str(i).zfill(3), 'jpg')
    if not os.path.exists(file_path):
        with open(file_path, 'wb') as f:
            f.write(content)
            f.close()
        print("susscess")


def main(i):
    url = base_url + str(i)
    url_true = tes2_url(url)
    if url_true:
        title, img_num, img_base = parse(url_true)
        for i in range(1, int(img_num)):
            download_img(title, img_base, i)
            img_url = img_base + str(i).zfill(3) + '.jpg'
            result = {
                'title': title,
                'indx': i,
                'url': img_url
            }
            print(result)


if __name__ == "__main__":
    pool = Pool()
    pool.map(main, [i for i in range(start, end)])

